version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.3
    container_name: bor-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bor-network

  kafka:
    image: confluentinc/cp-kafka:7.4.3
    container_name: bor-kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    networks:
      - bor-network

  bor-message:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bor-message
    restart: unless-stopped
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - KAFKA_BROKER=kafka:29092
      - PORT=4430
    ports:
      - "4430:4430"
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "-O-", "http://localhost:4430/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - bor-network

networks:
  bor-network:
    external: true 